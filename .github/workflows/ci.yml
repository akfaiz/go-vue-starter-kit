name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

concurrency:
  group: tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  go:
    name: Go Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Print Go env
        run: |
          go version
          go env
      
      - name: Install Tools
        run: |
          set -euo pipefail
          go install github.com/onsi/ginkgo/v2/ginkgo@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Ensure dist folder exists
        run: mkdir -p web/dist
      
      - name: Lint code
        run: |
          set -euo pipefail
          golangci-lint run ./...

      - name: Run tests (Makefile if available)
        run: make test.ci

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: './...'